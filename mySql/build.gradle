/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.5/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'


    // Apply the application plugin to add support for building an application
    id 'application'
}

// Define the main class for the application
mainClassName = 'App'

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    compile 'com.google.guava:guava:23.0'
    compile 'com.marklogic:marklogic-spring-batch-core:1.6.0a'
    compile "com.marklogic:spring-batch-rdbms:1.6.0a"
    compile "com.marklogic:spring-batch-http:1.6.0a"
    compile 'com.google.code.gson:gson:2.8.2'
    compile 'org.apache.httpcomponents:httpclient:4.5.5'


    compile 'com.marklogic:marklogic-client-api:4.0.3.1'
    compile "com.marklogic:ml-javaclient-util:2.12.0"
    compile "org.springframework:spring-jdbc:4.3.5.RELEASE"
    runtime "com.h2database:h2:1.4.193"
    runtime  group: 'mysql', name: 'mysql-connector-java', version: '5.1.13'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenLocal()
}
version 'unspecified'

task runH2SQLJob(type: JavaExec) {
    main = 'com.marklogic.spring.batch.core.launch.support.CommandLineJobRunner'
    description = "Run the migration program"
    classpath = sourceSets.main.runtimeClasspath
    args = ["--job_path", "nl.marklogic.sb.SQLJobConfig",
            "--job_id", "migrateJob",
            "--jdbc_driver","org.h2.Driver",
            "--jdbc_url","jdbc:h2:file:./data/h2/sample",
            "--jdbc_username","sa",
            "--jdbc_password","",
            "--all_tables","true",
            "--document_type","xml",
            "--output_uri_prefix","/data/",
            "--permissions","rest-reader,read,rest-writer,update",
            "--root_local_name","_tableName",
            "--sql","SELECT * FROM PRODUCT",
            "--uri_id","Parameter_Time",
            "--collections",uri_id,
            "--thread_count",thread_count,
            "--chunk_size",chunk_size
    ]
}
ext{
    startRow = project.hasProperty('startRow') ? project.getProperty('startRow') : '0'
    blockSize = project.hasProperty('blockSize') ? project.getProperty('blockSize') : '1000'
    esTable = project.hasProperty('esTable') ? project.getProperty('esTable') : '5hz2015'
    esYear = project.hasProperty('esYear') ? project.getProperty('esYear') : '2015'
    esMon = project.hasProperty('esMon') ? project.getProperty('esMon') : '12'
    esDay = project.hasProperty('esDay') ? project.getProperty('esDay') : '11'
    esTail = project.hasProperty('esTail') ? project.getProperty('esTail') : '9'
    esUser = (esYear = '2016') ? 'generic' : 'marklogic'
    esPwd = (esYear = '2016') ? 'generic2018' : 'marklogic2018'
}

task runFlightRecorderMySqlImportJob(type: JavaExec) {
    main = 'com.marklogic.spring.batch.core.launch.support.CommandLineJobRunner'
    description = "Run the migration program"
    classpath = sourceSets.main.runtimeClasspath
    args = ["--job_path", "nl.marklogic.sb.SQLJobConfig",
            "--job_id", "migrateJob",
            "--jdbc_driver","com.mysql.jdbc.Driver",
            "--jdbc_url","jdbc:mysql://kx-mi-0159.kixs.org:3306/10hz",
            "--jdbc_username","marklogic",
            "--jdbc_password","marklogic2018",
            "--all_tables","false",
            "--document_type","xml",
            "--output_uri_prefix","/FlighData/MySQL/",
            "--permissions","rest-reader,read,rest-writer,update",
            "--root_local_name","FlightData",
            "--sql","SELECT * FROM 10hz.10hzall WHERE (TAIL1 = 22 or TAIL2 = 22) AND YEAR = 2015 AND MON = 10 and DAY = 1 and HRS > 12 LIMIT ${startRow},${blockSize}",
            "--uri_column","Parameter Time",
            "--collections","FlightData,MySQL",
            "--thread_count",thread_count,
            "--chunk_size",chunk_size
    ]
}

// WHERE tail1 = 22, 25, 19
//jdbc:mysql://kx-mi-0159.kixs.org:3306/10hz

task runFlightRecorderElasticSearchJob(type:JavaExec) {
    main = 'com.marklogic.spring.batch.core.launch.support.CommandLineJobRunner'
    jvmArgs = ['-Xms4g', '-Xmx4g']
    description = "Run the migration program"
    classpath = sourceSets.main.runtimeClasspath
    args = ["--job_path", "nl.marklogic.sb.HTTPJobConfig",
            "--job_id", "httpJob",
            "--http_url","https://5hz.kixs.org/${esTable}/_msearch/",
            "--http_username","${esUser}",
            "--http_password","${esPwd}",
            "--document_type","json",
            "--output_uri_prefix","/FlighData/ES/",
            "--permissions","rest-reader,read,rest-writer,update",
            "--collections","FlightData,ElasticSearch,${esTable}",
            "--query","{\"index\" : \"${esTable}\"}\n{\"query\" : {\"bool\": {\"must\":["+
                    "{\"match\":{\"DAY\":${esDay}}},"+
                    "{\"match\":{\"MONTH\":${esMon}}},"+
                    "{\"match\":{\"YEAR\":${esYear}}}]}},"+
                    "\"from\" : \"${startRow}\","+
                    "\"size\" : \"${blockSize}\"}\n",
            "--thread_count",thread_count,
            "--chunk_size",chunk_size,
    ]
}

task loadH2Data(type: JavaExec) {
    classpath = configurations.testRuntime
    main = "org.h2.tools.RunScript"
    args = [
            "-url", "jdbc:h2:file:./data/h2/sample",
            "-user", "sa",
            "-script", "./data/h2setup.sql"
    ]
}

